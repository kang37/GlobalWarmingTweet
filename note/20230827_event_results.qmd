---
title: "Results"
execute:
  echo: false
author: "Kang"
format: html
editor: visual
---

## 峰值事件识别

方法：

（1）在每一年每天推文数基础上，结合每年的用户总数，计算每天每用户推文数（即每天推文数除以当年用户总数）。**将数据按照年份分成10份**，对于每年的数据，在每天每用户推文数基础上，计算出每年的高值线（此处取90分位数）。\
（2）大于该高值线的日期称为高值日期。\
（3）若高值日期连续天数大于等于3天，则称为一个事件。

```{r}
library(knitr)
tar_load(tw_high_90)
tw_high_90 %>% 
  mutate(
    day = day(date),
    date_dummy = as.Date(paste("9999", month, day, sep = "-"))
  ) %>% 
  ggplot() + 
  geom_tile(aes(date_dummy, 1), fill = "darkred") + 
  theme_bw() +
  theme(
    axis.ticks.x = element_blank(),
    axis.ticks.y = element_blank(),
    axis.text.y = element_blank(), 
    panel.grid = element_blank()
  ) +
  scale_x_date(date_labels = "%b") + 
  labs(x = "Date", y = "") + 
  facet_wrap(.~ year, ncol = 1, strip.position = "right")

tw_high_90 %>% 
  select(year, grp) %>% 
  distinct() %>% 
  group_by(year) %>% 
  summarise(peak_num = n()) %>% 
  ungroup() %>% 
  knitr::kable()
```

## 峰值事件分析

共识别出40个事件，原本分析的两个事件分别是事件37和事件40。首先计算了两个事件中所有用户的（节点）的中心度，包括度量中心度（Degree centrality）、中介中心度（Betweenness centrality）。中心度计算以被转推者为核心，比如说一个用户被10个人转推了，那么它的度量中心度就是10。各个事件的度量中心度前10位和中介中心度前10位如下见附件表格\"top_degree.xlsx\"和\"top_between.xlsx\"。

然后做网络图。由于无法将所有的节点和连接都画出来（非常耗时而且看不清联系），筛选出度量中心度或中介中心度比较高的节点做网络图。community detection采用的方法是"connected compenents using [igraph::components()](http://127.0.0.1:33663/help/library/igraph/help/components)"。各个事件的网络图如下，community以颜色区分，并且展示中心用户在网络中的位置，标签为账户名（就是艾特后面那串）。对于数据库中无对应账户名的，以空标签框表示。

```{r}
tar_load(net_plot_comm)
for(i in 1:40) {
  net_plot_comm[[i]] <- net_plot_comm[[i]] + labs(title = as.character(i))
}
net_plot_comm
```
